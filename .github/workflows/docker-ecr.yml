name: Build and Deploy Profile Board

on:
  push:
    branches: [ main ]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  build:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build jar
        run: ./gradlew build

  docker-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: profile-board
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  terraform-db:
    runs-on: ubuntu-latest
    needs: docker-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init (DB only)
        run: terraform -chdir=aws init
      - name: Terraform Apply (DB only)
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: terraform -chdir=aws apply -auto-approve -target=aws_db_instance.profile_board_db

  terraform-apply:
    runs-on: ubuntu-latest
    needs: [docker-push, terraform-db]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform -chdir=aws init
      - name: Terraform Import ECR
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: terraform -chdir=aws import aws_ecr_repository.profile_board profile-board || true
      - name: Terraform Apply (other resources)
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: terraform -chdir=aws apply -auto-approve -target=aws_ecr_repository.profile_board -target=aws_instance.profile_board_ec2 -target=aws_api_gateway_rest_api.profile_board_api -target=aws_api_gateway_resource.heartbeat -target=aws_api_gateway_method.heartbeat_get -target=aws_api_gateway_integration.heartbeat_integration -target=aws_api_gateway_deployment.profile_board_api_deployment
